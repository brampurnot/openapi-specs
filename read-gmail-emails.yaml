openapi: 3.0.3
info:
  title: Gmail API - Messages
  description: OpenAPI specification for reading and modifying Gmail messages
  version: 1.0.0
  contact:
    name: Google Gmail API
    url: https://developers.google.com/gmail/api
  license:
    name: Google APIs Terms of Service
    url: https://developers.google.com/terms

servers:
  - url: https://gmail.googleapis.com/gmail/v1
    description: Gmail API production server

security:
  - OAuth2:
      - https://www.googleapis.com/auth/gmail.modify

paths:
  /users/{userId}/messages:
    get:
      summary: List messages
      description: Lists the messages in the user's mailbox
      operationId: listMessages
      tags:
        - Messages
      security:
        - OAuth2:
            - https://www.googleapis.com/auth/gmail.readonly
      parameters:
        - name: userId
          in: path
          required: true
          description: The user's email address. The special value 'me' can be used to indicate the authenticated user.
          schema:
            type: string
            default: me
        - name: maxResults
          in: query
          description: Maximum number of messages to return (1-500)
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 100
        - name: pageToken
          in: query
          description: Page token to retrieve a specific page of results
          schema:
            type: string
        - name: q
          in: query
          description: Query string for filtering messages (same syntax as Gmail search)
          schema:
            type: string
          example: "is:unread"
        - name: labelIds
          in: query
          description: Only return messages with labels that match all of the specified label IDs
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: includeSpamTrash
          in: query
          description: Include messages from SPAM and TRASH in the results
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMessagesResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}/messages/{id}:
    get:
      summary: Get message
      description: Gets the specified message
      operationId: getMessage
      tags:
        - Messages
      security:
        - OAuth2:
            - https://www.googleapis.com/auth/gmail.readonly
      parameters:
        - name: userId
          in: path
          required: true
          description: The user's email address. The special value 'me' can be used to indicate the authenticated user.
          schema:
            type: string
            default: me
        - name: id
          in: path
          required: true
          description: The ID of the message to retrieve
          schema:
            type: string
        - name: format
          in: query
          description: The format to return the message in
          schema:
            type: string
            enum: [minimal, full, raw, metadata]
            default: full
        - name: metadataHeaders
          in: query
          description: When given and format is METADATA, only include headers specified
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}/messages/{id}/modify:
    post:
      summary: Modify message labels
      description: Modifies the labels on the specified message
      operationId: modifyMessage
      tags:
        - Messages
      security:
        - OAuth2:
            - https://www.googleapis.com/auth/gmail.modify
      parameters:
        - name: userId
          in: path
          required: true
          description: The user's email address. The special value 'me' can be used to indicate the authenticated user.
          schema:
            type: string
            default: me
        - name: id
          in: path
          required: true
          description: The ID of the message to modify
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addLabelIds:
                  type: array
                  description: A list of label IDs to add to the message
                  items:
                    type: string
                removeLabelIds:
                  type: array
                  description: A list of label IDs to remove from the message
                  items:
                    type: string
            examples:
              markAsRead:
                summary: Mark as read
                value:
                  removeLabelIds: ["UNREAD"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}/messages/send:
    post:
      summary: Send email
      description: Sends the specified message to the recipients in the To, Cc, and Bcc headers
      operationId: sendMessage
      tags:
        - Messages
      security:
        - OAuth2:
            - https://www.googleapis.com/auth/gmail.send
      parameters:
        - name: userId
          in: path
          required: true
          description: The user's email address. The special value 'me' can be used to indicate the authenticated user.
          schema:
            type: string
            default: me
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                raw:
                  type: string
                  description: The entire email message in base64url encoded string format (RFC 2822 formatted)
                threadId:
                  type: string
                  description: The ID of the thread the message belongs to (optional, for replies)
              required:
                - raw
            examples:
              simpleEmail:
                summary: Simple email
                value:
                  raw: "VG86IHJlY2lwaWVudEBleGFtcGxlLmNvbQpTdWJqZWN0OiBIZWxsbyBXb3JsZApDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9dXRmLTgKCkhlbGxvLCB0aGlzIGlzIGEgdGVzdCBlbWFpbCE="
              replyEmail:
                summary: Reply to thread
                value:
                  raw: "VG86IHJlY2lwaWVudEBleGFtcGxlLmNvbQpTdWJqZWN0OiBSZTogUHJldmlvdXMgU3ViamVjdApDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9dXRmLTgKCkhlbGxvLCB0aGlzIGlzIGEgcmVwbHkhCg=="
                  threadId: "1234567890abcdef"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: OAuth 2.0 authorization
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
          tokenUrl: https://oauth2.googleapis.com/token
          scopes:
            https://www.googleapis.com/auth/gmail.readonly: Read all resources and their metadata
            https://www.googleapis.com/auth/gmail.modify: Read, compose, and send messages
            https://www.googleapis.com/auth/gmail.send: Send email on behalf of the user

  schemas:
    ListMessagesResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageListItem'
        nextPageToken:
          type: string
        resultSizeEstimate:
          type: integer

    MessageListItem:
      type: object
      properties:
        id:
          type: string
        threadId:
          type: string

    Message:
      type: object
      properties:
        id:
          type: string
        threadId:
          type: string
        labelIds:
          type: array
          items:
            type: string
        snippet:
          type: string
        historyId:
          type: string
        internalDate:
          type: string
        payload:
          $ref: '#/components/schemas/MessagePart'
        sizeEstimate:
          type: integer
        raw:
          type: string

    MessagePart:
      type: object
      properties:
        partId:
          type: string
        mimeType:
          type: string
        filename:
          type: string
        headers:
          type: array
          items:
            $ref: '#/components/schemas/MessagePartHeader'
        body:
          $ref: '#/components/schemas/MessagePartBody'
        parts:
          type: array
          items:
            $ref: '#/components/schemas/MessagePart'

    MessagePartHeader:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

    MessagePartBody:
      type: object
      properties:
        attachmentId:
          type: string
        size:
          type: integer
        data:
          type: string

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
            errors:
              type: array
              items:
                type: object
